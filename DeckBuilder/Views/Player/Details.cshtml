@model DeckBuilder.ViewModels.ProfileViewModel

<script src="@Url.Content("~/Scripts/profilePage.js")" type="text/javascript"></script>

@{
    ViewBag.Title = (Model.player.Name)+ "'s Profile Page";
}

<div class="ProfileInfo">
    <h1 style="display:inline-block">@Model.player.Name </h1> 
    @if (Model.Editable == true)
    {
        <h2 class="ProfileEditLink" style="display:inline-block">@Html.ActionLink("(Edit)", "Edit", new { id = Model.player.PlayerID })  </h2>
    }
    @if (Model.player.ProfileImageUrl != null && Model.player.ProfileImageUrl != "")
    {
        <img class="GameProfileImage" src="@Model.player.ProfileImageUrl" alt="@Model.player.Name" />
    }
    else
    {
        <img class="GameProfileImage" src="@Url.Content("~/Content/Images/Site/questionmark.png")" alt="@Model.player.Name" />
    }
    <p class="GamePageDescription"> <span class="GamePageDescriptionHeader">Description: </span>    @Model.player.Description</p>


    @foreach (var record in @Model.GameRecords)
    {
        <div>
            <h1 class="ParentHeader"><img class="RecordListImage" src="../../@record.ImageUrl"/>@record.Name (@(record.RankedTotalGames+record.TotalGames))</h1>
            <ul>
                <li>
                    <div>
                        <h3>Ranked</h3>
                        Games Played: @record.RankedTotalGames <br />
                        Win Rate: @record.RankedWinPercent %       
                    </div>
                    <div>
                        <h3>Unranked</h3>
                        Games Played: @record.TotalGames <br />
                        Win Rate: @record.WinPercent %       
                    </div>
                </li>
            </ul>
        </div>
    }

</div>
<div class="ProfileTables">     
    <div>
        <h2  class="ParentHeader">Active Games (@(Model.ActiveGames.Count() + Model.ActiveRankedGames.Count()))</h2>   
        <ul>             
            <li>
                <h3 class="ParentHeader">Ranked (@Model.ActiveRankedGames.Count())</h3>
                <ul>
                    @foreach (var item in @Model.ActiveRankedGames)
                    {
                        <li>
                            @item.gameName with @item.formattedOpponentNames @item.status                    
                            @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                            @Html.ActionLink("Forfeit", "Forfeit", "Table", new { id = item.tableId }, null)
                        </li>
                    }
                </ul>
            </li>
            <li>
                <h3 class="ParentHeader">Unranked (@Model.ActiveGames.Count())</h3>
                <ul>
                    @foreach (var item in @Model.ActiveGames)
                    {
                        <li>
                            @item.gameName with @item.formattedOpponentNames @item.status                    
                            @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                            @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                        </li>
                    }
                </ul>
            </li>        
        </ul>
    </div>  
    <div>
        <h2 class="ParentHeader">Proposed Games (@Model.ProposedGames.Count())</h2>    
        <ul>
            @foreach (var item in @Model.ProposedGames)
            {
                <li>
                    @item.gameName with @item.formattedOpponentNames @item.status
                    @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                    @if (item.cancellable == true)
                    {
                        @Html.ActionLink("Cancel", "Cancel", "Table", new { id = item.tableId }, null)
                    }
                    else
                    {
                        @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                    }
                </li>
            }
        </ul>
    </div>
    <div>
        <h2 class="ParentHeader">Completed Games (@(Model.CompletedRankedGames.Count() + @Model.CompletedGames.Count()))</h2>
        <ul>
            <li>
                <h3  class="ParentHeader">Ranked (@Model.CompletedRankedGames.Count())</h3>
                <ul>
                    @foreach (var item in @Model.CompletedRankedGames)
                    {
                        <li>
                            @item.gameName with @item.formattedOpponentNames @item.status
                            @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                            @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                        </li>
                    }
                </ul>
            </li>
            <li>
                <h3 class="ParentHeader">Unranked (@Model.CompletedGames.Count())</h3>
                <ul>
                    @foreach (var item in @Model.CompletedGames)
                    {
                        <li>
                            @item.gameName with @item.formattedOpponentNames @item.status
                            @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                            @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                        </li>
                    }
                </ul>
            </li>
        </ul>
    </div>
    <div>
        <h2 class="ParentHeader">Dev Games (@Model.DevGames.Count())</h2>
        <ul>
            @foreach (var item in @Model.DevGames)
            {
                <li>
                    @item.gameName with @item.formattedOpponentNames @item.status
                    @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                    @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                </li>
            }
        </ul>
    </div>
    <div>
        <h2 class="ParentHeader">Cancelled Games (@Model.CancelledGames.Count())</h2>
        <ul>
            @foreach (var item in @Model.CancelledGames)
            {
                <li>
                    @item.gameName with @item.formattedOpponentNames @item.status
                    @Html.ActionLink(item.linkText, "Play", "Table", new { id = item.tableId }, null)
                    @Html.ActionLink("Remove", "Remove", "Table", new { id = item.tableId }, null)
                </li>
            }
        </ul>
    </div>
    
</div>

